<template>
<div class="upload-IDCard">
    <div class="Member-nav">
        <router-link to="/entry">
        <div class="Member-back">
            <span class="iconfont ">&#xe602;</span>
        </div>
        </router-link>
        <div class="Member-collection">
            <h4 class="Member-msgtitle">{{MemberTitle.title}}</h4>
        </div>
        <div class="Member-refer" @click="keepPostdata" >
            <h4 class="Member-submit">{{MemberTitle.refer}}</h4>
        </div>
    </div>
    <div class="Stuff-Id">
        <p class="stuff-idht">{{MemberTitle.idtitle}}</p>
        <div class="upload-img" style="width:100%;text-align: center;">
					<el-upload
						ref="picker"
						action="http://1.180.3.61:8766//PSIGW/RESTListeningConnector/PSFT_HR/FILEUPLOAD.v1/"
                        :file-list="fileList2"
						list-type="picture-card"
						accept="image/JPEG,image/PNG,image/JPG"
						:http-request="httpRequest"
						:show-file-list="true"
						:auto-upload="true"
                        :limit="1"
                        :on-exceed="handleExceed"
						:on-preview="handlePictureCardPreview"
						:on-remove="handleRemove"
						:before-upload="beforeAvatarUpload">
						<i class="el-icon-plus"></i>
					</el-upload>
        </div>
    </div>
</div>
</template>
<script>
export default {
  name: 'IDCardPhone',
  data () {
    return {
      MemberTitle: {
        back: '',
        title: '身份证上传',
        refer: '保存',
        idtitle: '点击后可进行删除操作'
      },
	  filedata:[],
      fileList2: [] 
    }
  },
  methods: {
    httpRequest (options) {
				var that = this;
				// 获取文件对象
				let file = options.file
				//判断图片类型
				if (file.type == 'image/jpeg' || file.type == 'image/png' || file.type == 'image/JPG') {
					var isJPG = true
				} else {
					isJPG = false
				}
				// 判断图片大小
				const isLt2M = file.size / 1024 / 1024 < 10
				if (!isLt2M) {
					this.$message.error('上传产品图片不能超过10M!')
				}

				// 创建一个HTML5的FileReader对象
				var reader = new FileReader();
				//创建一个img对象
				var img = new Image();
				let filename = options.filename
				if (file) {
					reader.readAsDataURL(file)
				}
				if (isJPG && isLt2M) {
					reader.onload = (e) => {
						let base64Str = reader.result.split(',')[1]
						img.src = e.target.result
						// base64地址图片加载完毕后执行
						img.onload = function() {
							// 缩放图片需要的canvas（也可以在DOM中直接定义canvas标签，这样就能把压缩完的图片不转base64也能直接显示出来）
							var canvas = document.createElement('canvas');
							var context = canvas.getContext('2d');
							// 图片原始尺寸
							var originWidth = this.width;
							var originHeight = this.height;
							// 最大尺寸限制，可通过设置宽高来实现图片压缩程度
							var maxWidth = 300,
								maxHeight = 300;
							// 目标尺寸
							var targetWidth = originWidth,
								targetHeight = originHeight;
							// 图片尺寸超过最大尺寸的限制
							if (originWidth > maxWidth || originHeight > maxHeight) {
								if (originWidth / originHeight > maxWidth / maxHeight) {
									// 更改宽度，按照宽度限定尺寸
									targetWidth = maxWidth;
									targetHeight = Math.round(maxWidth * (originHeight / originWidth));
								} else {
									targetHeight = maxHeight;
									targetWidth = Math.round(maxHeight * (originWidth / originHeight));
								}
							}
							//对图片进行缩放
							canvas.width = targetWidth;
							canvas.height = targetHeight;
							// 清除画布
							context.clearRect(0, 0, targetWidth, targetHeight);
							// 图片压缩
							context.drawImage(img, 0, 0, targetWidth, targetHeight);
							/*第一个参数是创建的img对象；第二三个参数是左上角坐标，后面两个是画布区域宽高*/
							//压缩后的base64文件
							var newUrl = canvas.toDataURL('image/jpeg', 0.92);
							// console.log(newUrl);

							// this.dialogImageUrl = newUrl;

							//获取base64图片大小，返回MB数字
							var str = newUrl.replace('data:image/png;base64,', '');
							var equalIndex = str.indexOf('=');
							if (str.indexOf('=') > 0) {
								str = str.substring(0, equalIndex);
							}
							var strLength = str.length;
							var fileLength = parseInt(strLength - (strLength / 8) * 2);
							// 由字节转换为MB
							var size = "";
							size = (fileLength / (1024 * 1024)).toFixed(2);
							var sizeStr = size + ""; //转成字符串
							var index = sizeStr.indexOf("."); //获取小数点处的索引
							var dou = sizeStr.substr(index + 1, 2) //获取小数点后两位的值
							if (dou == "00") { //判断后两位是否为00，如果是则删除00                
								return sizeStr.substring(0, index) + sizeStr.substr(index + 3, 2)
							}
							console.log(size);
							var arr2 = {
								"FILENAME": options.file.name,
								"BASE64STRING": newUrl.split(',')[1]
							}
							that.filedata.push(arr2);
						}
					}
				}

			},
      beforeAvatarUpload(file) {
				const isJPG = file.type === 'image/jpeg' || 'image/jpg' || 'image/png';
				const isLt2M = file.size / 1024 / 1024 < 10;

				if (!isJPG) {
					this.$message.error('上传图片只能是 JPG/PNG/JPEG 格式!');
				}
				if (!isLt2M) {
					this.$message.error('上传图片大小不能超过 10MB!');
				}
				return isJPG && isLt2M;
			},
      handleRemove(file, fileList) {
       
      },
      handlePictureCardPreview(file) {     
			
      },
  	  handleAvatarSuccess(res, file) {//图片上传成功

      },
      handleExceed (files, fileList) {
        this.$messagebox.alert(`只能上传一个文件`)
      },
      keepPostdata(){  
				if (this.filedata.length > 0) {
                    console.log('保存')
                     return
						const loadingInstance1 = this.$loading({ body: true,text:"正在上传中",spinner:"el-icon-loading",background:"rgba(0, 0, 0, 0.8)" });
						this.$refs.picker.submit();
						var params = {
							"EOAWPRCS_ID": "YL_SSC_AWE_TER",
							"OPRID": "00181980",
							"TOKEN": "hrssc.yili.com",
							"TRANSACTION_NBR": "10270387",
							"FILEDATA": this.filedata
						
						};
						this.axios.post('http://1.180.3.61:8766//PSIGW/RESTListeningConnector/PSFT_HR/FILEUPLOAD.v1/', {
								data: params,
							})
							.then(res => {
								if(res.data.status){
									this.$message({
										message:"上传成功",
										type: 'success',
										center:true
									});
									loadingInstance1.close();
									if(this.$route.query.isSuc){
										this.$route.query.isSuc.push('004');
										this.$router.push({name:'Entry',params:{isSuc:this.$route.query.isSuc}});
									}	
								}
							})
							.catch(error => {
								console.log(error)
							})				
					
				}else{
					this.$messagebox.alert('请先上传照片后再做保存！')
				}
      }
	},
    mounted () {
        const ID = this.$route.query.name
        this.filedata = []
        let that = this
        console.log('进入附件页面')
        let arr = this.$store.state.entry.entrydatalist
        let uploadarr = []
        arr.forEach(function (item, index) {
            if (item.FILE_ID === ID) {
                that.MemberTitle.title = item.FILE_DESCR + '上传'
                uploadarr = item
                if (item.FILELIST[0].FILEPATH !== '') {
                    // that.fileList2.name = item.FILELIST[0].ATTACHUSERFILE
                    // that.fileList2.url = item.FILELIST[0].FILEPATH
                    console.log('敷能')
                    let obj = {}
                    obj.name = 'food.jpeg'
                    obj.url = 'https://fuss10.elemecdn.com/3/63/4e7f3a15429bfda99bce42a18cdd1jpeg.jpeg?imageMogr2/thumbnail/360x360/format/webp/quality/100'
                    that.fileList2.push(obj)
                }
            }
        })
    }
}
</script>
<style lang="stylus" scoped>
@import '~@/assets/styles/varibles.styl'
.Member-nav
  width:100%
  height:$darkHeight
  tex-align:center
  .Member-back
    box-sizing: border-box
    float:left
    width:20%
    height:$darkHeight
    line-height:$darkHeight
    padding-left:.4rem
    font-size:.3rem
    color:#333
  .Member-collection
    box-sizing: border-box
    float:left
    width:60%
    height:$darkHeight
    line-height:$darkHeight
    .Member-msgtitle
      font-weight:bold
      font-size:.4rem
      color:#666
      text-align:center
   .Member-refer
    box-sizing: border-box
    float:left
    width:20%
    height:$darkHeight
    line-height:$darkHeight
    .Member-submit
      font-weight:400
      font-size:.4rem
      color:#CC3300
      text-align:center
.Stuff-Id
  box-sizing:box-sizing
  padding-left:.4rem
  padding-right:.4rem
  font-size:14px
  .stuff-idht
    line-height:.5rem 
    padding-bottom:.3rem
    text-align:center
    
</style>
<style type="text/css">
		.upload-IDCard .Member-nav{
			position: fixed;
			top: 0px;
			left: 0px;
			right: 0px;
			z-index: 999;
			background-color: #FFFFFF;
		}
		.Stuff-Id {
			position: relative;
			top: 1.2rem;
		}
		
		.el-upload--picture-card {
			width: 5rem;
			height: auto;
		}
		
		.el-upload-list--picture-card .el-upload-list__item {
			width: 5rem;
			height: auto;
		}
		
  	.el-icon-zoom-in{
  		display: none;
  	}
</style>